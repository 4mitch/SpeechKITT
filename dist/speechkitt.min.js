//! Speech KITT
//! version : 0.1.0
//! author  : Tal Ater @TalAter
//! license : MIT
//! https://github.com/TalAter/SpeechKITT
(function(a){"use strict";var b,c,d,e=this,f=!1,g=function(){var a=document.createElement("div");a.id="skitt-ui",a.innerHTML='<a id="skitt-toggle-button">&nbsp;</a>',d=a,document.body.appendChild(d),document.getElementById("skitt-toggle-button").addEventListener("click",function(){e.SpeechKITT.toggleRecognition()})},h=function(){d!==a&&(d.classList.remove("skitt-ui--not-listening"),d.classList.add("skitt-ui--listening"))},i=function(){d!==a&&(d.classList.add("skitt-ui--not-listening"),d.classList.remove("skitt-ui--listening"))},j=function(){f||(f=!0,h())},k=function(){f&&(f=!1,i())};e.SpeechKITT={setStartCommand:function(a,c){if(a=e[a]||a,"function"!=typeof a)throw new TypeError("invalid callback function");c=c||this,b={callback:a,context:c}},setAbortCommand:function(a,b){if(a=e[a]||a,"function"!=typeof a)throw new TypeError("invalid callback function");b=b||this,c={callback:a,context:b}},startRecognition:function(){if(!b)throw new TypeError("cannot start recognition. Start command not defined");b.callback.apply(b.context),j()},abortRecognition:function(){if(!c)throw new TypeError("cannot abort recognition. Abort command not defined");c.callback.apply(c.context),k()},toggleRecognition:function(){f?this.abortRecognition():this.startRecognition()},onStart:function(){j()},onEnd:function(){k()},render:function(){d===a&&g(),this.isListening()?h():i()},vroom:function(){this.render()},show:function(){if(d===a)throw new TypeError("cannot show interface. Must be rendered first");d.classList.remove("skitt-ui--hidden")},hide:function(){if(d===a)throw new TypeError("cannot hide interface. Must be rendered first");d.classList.add("skitt-ui--hidden")},isListening:function(){return f}}}).call(this);